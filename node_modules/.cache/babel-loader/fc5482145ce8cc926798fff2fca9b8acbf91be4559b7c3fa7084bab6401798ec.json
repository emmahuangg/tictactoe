{"ast":null,"code":"var _jsxFileName = \"/Users/emma/Desktop/React/ticTacToe/tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport TopBar from './components/TopBar';\nimport BottomBar from './components/BottomBar';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport Block from './components/Block';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [roundNum, setRoundNum] = useState(1);\n  const [score, setScore] = useState([0, 0]);\n  const [checks, setChecks] = useState(Array(9).fill({\n    player: 1,\n    checked: false,\n    selected: false\n  }));\n  const [player, setPlayer] = useState(1);\n  const [winState, setWinState] = useState(0);\n  const handleClick = id => {\n    // console.log(\"Player \" + player + \" clicked \" + id);\n    setChecks(checks => checks.map((check, idx) => idx == id ? {\n      ...check,\n      player: player,\n      checked: true\n    } : check));\n  };\n  const [myStyle, setMyStyle] = useState({\n    backgroundColor: \"#477890\"\n  });\n  const checkWin = () => {\n    // 1. Check rows & cols\n    for (var i = 0; i < 3; i++) {\n      if (checks[i * 3 + 0].checked && checks[i * 3 + 1].checked && checks[i * 3 + 2].checked && checks[i * 3 + 0].player == checks[i * 3 + 1].player && checks[i * 3 + 1].player == checks[i * 3 + 2].player) {\n        checks[i * 3 + 0].selected = true;\n        checks[i * 3 + 1].selected = true;\n        checks[i * 3 + 2].selected = true;\n        return 1;\n      }\n      if (checks[i].checked && checks[i + 3].checked && checks[i + 6].checked && checks[i].player == checks[i + 3].player && checks[i + 3].player == checks[i + 6].player) {\n        checks[i].selected = true;\n        checks[i + 3].selected = true;\n        checks[i + 6].selected = true;\n        return 1;\n      }\n    }\n    // 2. Check diagonals\n    if (checks[0].checked && checks[4].checked && checks[8].checked && checks[0].player == checks[4].player && checks[4].player == checks[8].player) {\n      checks[0].selected = true;\n      checks[4].selected = true;\n      checks[8].selected = true;\n      return 1;\n    }\n    if (checks[2].checked && checks[4].checked && checks[6].checked && checks[2].player == checks[4].player && checks[4].player == checks[6].player) {\n      checks[2].selected = true;\n      checks[4].selected = true;\n      checks[6].selected = true;\n      return 1;\n    }\n    // 3. Check if board is full\n    for (var i = 0; i < 9; i++) {\n      if (!checks[i].checked) {\n        return 0;\n      }\n    }\n    return 2;\n  };\n  useEffect(() => {\n    var winsOrNot = checkWin();\n    setWinState(winsOrNot);\n    if (winsOrNot == 0) {\n      setPlayer(player => player == 1 ? 2 : 1);\n    } else if (winsOrNot == 1) {\n      if (player == 1) {\n        setScore(score => [score[0] + 1, score[1]]);\n        setMyStyle({\n          backgroundColor: \"#6863FF\"\n        });\n      } else {\n        setScore(score => [score[0], score[1] + 1]);\n        setMyStyle({\n          backgroundColor: \"#FF82A9\"\n        });\n      }\n    }\n  }, [checks]);\n  useEffect(() => {\n    if (player == 1) {\n      setMyStyle({\n        backgroundColor: \"#6863FF\"\n      });\n    } else {\n      setMyStyle({\n        backgroundColor: \"#FF82A9\"\n      });\n    }\n  }, [player]);\n  const restart = () => {\n    // console.log(\"New game\");\n    setRoundNum(roundNum => roundNum + 1);\n    setChecks(Array(9).fill({\n      player: 1,\n      checked: false,\n      selected: false\n    }));\n    setPlayer(roundNum % 2 ? 2 : 1);\n  };\n  const intArr = Array.from(Array(9).keys());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen\",\n    style: myStyle,\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      player: player,\n      round: roundNum,\n      score: score,\n      winState: winState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 grid-rows-3 text-center w-600 mx-auto h-600 rounded-3xl overflow-hidden outline outline-4 outline-black\",\n      children: intArr.map((elem, idx) => {\n        return /*#__PURE__*/_jsxDEV(Block, {\n          id: idx,\n          check: checks[idx],\n          className: \"col-span-1\",\n          handleClick: handleClick,\n          player: player,\n          winState: winState\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomBar, {\n      restart: restart,\n      winState: winState,\n      player: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RLCbTSFHckOXSaMJ0DkyCF0pr94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","TopBar","BottomBar","useState","useEffect","React","Block","App","roundNum","setRoundNum","score","setScore","checks","setChecks","Array","fill","player","checked","selected","setPlayer","winState","setWinState","handleClick","id","map","check","idx","myStyle","setMyStyle","backgroundColor","checkWin","i","winsOrNot","restart","intArr","from","keys","elem"],"sources":["/Users/emma/Desktop/React/ticTacToe/tictactoe/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport TopBar from './components/TopBar';\nimport BottomBar from './components/BottomBar';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport Block from './components/Block';\n\nfunction App() {\n  const [roundNum, setRoundNum] = useState(1);\n  const [score, setScore] = useState([0, 0]);\n  const [checks, setChecks] = useState(\n    Array(9).fill({ player: 1, checked: false, selected: false })\n  );\n  const [player, setPlayer] = useState(1);\n  const [winState, setWinState] = useState(0);\n  const handleClick = (id) => {\n    // console.log(\"Player \" + player + \" clicked \" + id);\n    setChecks((checks) => checks.map((check, idx) => (idx == id ? { ...check, player: player, checked: true } : check)));\n  }\n  const [myStyle, setMyStyle] = useState({ backgroundColor: \"#477890\" });\n\n  const checkWin = () => {\n    // 1. Check rows & cols\n    for (var i = 0; i < 3; i++) {\n      if ((checks[i * 3 + 0].checked && checks[i * 3 + 1].checked && checks[i * 3 + 2].checked)\n        && (checks[i * 3 + 0].player == checks[i * 3 + 1].player && checks[i * 3 + 1].player == checks[i * 3 + 2].player)\n      ) {\n        checks[i * 3 + 0].selected = true;\n        checks[i * 3 + 1].selected = true;\n        checks[i * 3 + 2].selected = true;\n        return 1;\n      }\n      if ((checks[i].checked && checks[i + 3].checked && checks[i + 6].checked)\n        && (checks[i].player == checks[i + 3].player && checks[i + 3].player == checks[i + 6].player)) {\n        checks[i].selected = true;\n        checks[i + 3].selected = true;\n        checks[i + 6].selected = true;\n        return 1;\n      }\n    }\n    // 2. Check diagonals\n    if ((checks[0].checked && checks[4].checked && checks[8].checked)\n      && (checks[0].player == checks[4].player && checks[4].player == checks[8].player)) {\n      checks[0].selected = true;\n      checks[4].selected = true;\n      checks[8].selected = true;\n      return 1;\n    }\n    if ((checks[2].checked && checks[4].checked && checks[6].checked)\n      && (checks[2].player == checks[4].player && checks[4].player == checks[6].player)) {\n      checks[2].selected = true;\n      checks[4].selected = true;\n      checks[6].selected = true;\n      return 1;\n    }\n    // 3. Check if board is full\n    for (var i = 0; i < 9; i++) {\n      if (!checks[i].checked) {\n        return 0;\n      }\n    }\n    return 2;\n  }\n  useEffect(() => {\n    var winsOrNot = checkWin();\n    setWinState(winsOrNot);\n    if (winsOrNot == 0) {\n      setPlayer((player) => player == 1 ? 2 : 1);\n    } else if (winsOrNot == 1) {\n      if (player == 1) {\n        setScore((score) => [score[0] + 1, score[1]])\n        setMyStyle({ backgroundColor: \"#6863FF\" })\n      } else {\n        setScore((score) => [score[0], score[1] + 1])\n        setMyStyle({ backgroundColor: \"#FF82A9\" })\n      }\n    }\n  }, [checks]);\n\n  useEffect(() => {\n    if (player == 1) {\n      setMyStyle({ backgroundColor: \"#6863FF\" })\n    } else {\n      setMyStyle({ backgroundColor: \"#FF82A9\" })\n    }\n  }, [player]);\n\n  const restart = () => {\n    // console.log(\"New game\");\n    setRoundNum((roundNum) => roundNum + 1);\n    setChecks(Array(9).fill({ player: 1, checked: false, selected: false }))\n    setPlayer(roundNum % 2 ? 2 : 1)\n  }\n\n  const intArr = Array.from(Array(9).keys());\n  return (\n    <div className=\"w-screen\" style={myStyle}>\n      <TopBar player={player} round={roundNum} score={score} winState={winState} />\n      <div className='grid grid-cols-3 grid-rows-3 text-center w-600 mx-auto h-600 rounded-3xl overflow-hidden outline outline-4 outline-black'>\n        {\n          intArr.map((elem, idx) => {\n            return <Block key={idx} id={idx} check={checks[idx]} className=\"col-span-1\" handleClick={handleClick} player={player} winState={winState} />\n          })\n        }\n      </div>\n      <BottomBar restart={restart} winState={winState} player={player} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}